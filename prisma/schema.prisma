// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String     @unique
  workoutDays Int
  workouts    Workout[]
}

model BodyPart {
  id          Int        @id @default(autoincrement())
  name        String
  bodyPartExercises BodyPartExercise[]
}

model Exercise {
  id          Int       @id @default(autoincrement())
  name        String
  bodyPartExercises BodyPartExercise[]
  workoutExercises WorkoutExercise[]
}

model BodyPartExercise {
  bodyPartId  Int
  exerciseId  Int
  isPrimary   Boolean
  bodyPart    BodyPart  @relation(fields: [bodyPartId], references: [id])
  exercise    Exercise  @relation(fields: [exerciseId], references: [id])

  @@id([bodyPartId, exerciseId])
}

model Workout {
  id          Int       @id @default(autoincrement())
  userId      Int
  day         Int
  user        User      @relation(fields: [userId], references: [id])
  workoutExercises WorkoutExercise[]
}

model WorkoutExercise {
  workoutId  Int
  exerciseId Int
  workout    Workout    @relation(fields: [workoutId], references: [id])
  exercise   Exercise   @relation(fields: [exerciseId], references: [id])
  @@id([workoutId, exerciseId])
}
